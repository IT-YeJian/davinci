<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ <<
  ~  Davinci
  ~  ==
  ~  Copyright (C) 2016 - 2020 EDP
  ~  ==
  ~  Licensed under the Apache License, Version 2.0 (the "License");
  ~  you may not use this file except in compliance with the License.
  ~  You may obtain a copy of the License at
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~   Unless required by applicable law or agreed to in writing, software
  ~   distributed under the License is distributed on an "AS IS" BASIS,
  ~   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~   See the License for the specific language governing permissions and
  ~   limitations under the License.
  ~  >>
  ~
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edp.davinci.server.dao.ProjectExtendMapper">

    <delete id="deleteAllRel">
        delete
        from rel_role_project
        where project_id = #{projectId}
          and role_id in (select id from role where org_id = #{orgId});

        delete
        from rel_role_dashboard_widget
        where role_id in (select id from role where org_id = #{orgId})
          and mem_dashboard_widget_id in (
            select id
            from mem_dashboard_widget
            where dashboard_id in (
                select d.id
                from dashboard d
                         inner join dashboard_portal dp on dp.id = d.dashboard_portal_id
                where dp.project_id = #{projectId}
            )
        );

        delete
        from rel_role_dashboard
        where role_id in (select id from role where org_id = #{orgId})
          and dashboard_id in (
            select d.id
            from dashboard d
                     inner join dashboard_portal dp on dp.id = d.dashboard_portal_id
            where dp.project_id = #{projectId}
        );

        delete
        from rel_role_portal
        where role_id in (select id from role where org_id = #{orgId})
          and portal_id in (select id from dashboard_portal where project_id = #{projectId});

        delete
        from rel_role_display_slide_widget
        where role_id in (select id from role where org_id = #{orgId})
          and mem_display_slide_widget_id in (select m.id
                                              from mem_display_slide_widget m
                                                       right join display_slide s on s.id = m.display_slide_id
                                                       right join display d on d.id = s.display_id
                                              where d.project_id = #{projectId});

        delete
        from rel_role_slide
        where role_id in (select id from role where org_id = #{orgId})
          and slide_id in (select s.id
                           from display_slide s
                                    right join display d on d.id = s.display_id and d.project_id = #{projectId});

        delete
        from rel_role_display
        where role_id in (select id from role where org_id = #{orgId})
          and display_id in (select id from display where project_id = #{projectId});

        delete
        from rel_role_view
        where role_id in (select id from role where org_id = #{orgId})
          and view_id in (select id from view where project_id = #{projectId});

        delete
        from rel_project_admin
        where project_id = #{projectId};
    </delete>


    <sql id="selectProjectByUserBaseSql">
        select p.*,
        if(s.`id` is null, false, true) as 'isStar',
        u.`id` as 'createUser.id',
        IF(u.`name` is null, u.`username`, u.`name`) as 'createUser.username',
        u.`avatar` as 'createUser.avatar',
        u.`email` as 'createUser.email'
        from project p
        left join `user` u on u.`id` = p.`user_id`
        left join star s on (s.target_id = p.id and s.`target` = 'project' and s.user_id = #{userId})
        where p.id in (
        <!-- 当前用户是project的创建者或管理员 -->
        select distinct p.id
        from project p
        left join rel_project_admin rpa on rpa.project_id = p.id
        where p.user_id = #{userId} or rpa.user_id = #{userId}

        union all

        <!-- 当前用户权限关联的project -->
        select distinct p.id
        from project p
        left join rel_role_project rrp on rrp.project_id = p.id
        left join rel_role_user rru on rru.role_id = rrp.role_id
        where rru.user_id = #{userId}

        union all

        <!--当前用户是project所在org的owner-->
        select distinct p.id
        from project p
        left join rel_user_organization ruo on ruo.org_id = p.org_id
        left join organization o on o.id = p.org_id
        where o.user_id = #{userId}

        union all

        <!--当前org下project对普通成员可见-->
        select distinct p.id
        from project p
        left join rel_user_organization ruo on ruo.org_id = p.org_id
        left join organization o on o.id = p.org_id
        where ruo.user_id = #{userId} and (ruo.role = 1 or (p.visibility = 1 and o.member_permission = 1))
        )
    </sql>


    <select id="getProjectsByKeywordsWithUser" resultType="edp.davinci.server.dto.project.ProjectWithCreateBy">
        <include refid="selectProjectByUserBaseSql"></include>
        <if test="orgList != null">
            and p.org_id in
            <foreach collection="orgList" index="index" item="item" open="(" close=")" separator=",">
                #{item.id}
            </foreach>
        </if>
        <if test="keywords != null">
            and lower(p.`name`) like concat(concat('%', lower(#{keywords})), '%')
        </if>
        order by p.id
    </select>

    <select id="getProjectsByOrgWithUser" resultType="edp.davinci.server.dto.project.ProjectWithCreateBy">
        <include refid="selectProjectByUserBaseSql"></include>
        <if test="orgId != null">
            and p.org_id = #{orgId}
        </if>
        <if test="keyword != null">
            and lower(p.`name`) like concat(concat('%', lower(#{keyword})), '%')
        </if>
        order by p.id
    </select>

    <select id="getProjectsByUser" resultType="edp.davinci.server.dto.project.ProjectWithCreateBy">
        <include refid="selectProjectByUserBaseSql"></include>
        order by p.id
    </select>

    <select id="getFavoriteProjects" resultType="edp.davinci.server.dto.project.ProjectWithCreateBy">
        select t.* from (
        <include refid="selectProjectByUserBaseSql"></include>
        ) t left join favorite f on t.id = f.project_id
        where f.user_id = #{userId}
        order by t.id
    </select>

</mapper>